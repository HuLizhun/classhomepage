<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- dao层的接口 -->
<mapper namespace="com.textile083.dao.ArticleDAO">
	<!-- 映射类 -->
	<resultMap type="com.textile083.entity.Article" id="ArticleResult">
		<!-- id表示主键，column为列名忽略大小写，property为属性名 -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<!-- result表示普通列 -->
		<result column="student_number" jdbcType="VARCHAR" property="number" />
		<result column="student_name" jdbcType="VARCHAR" property="name" />
		<result column="article_title" jdbcType="VARCHAR" property="title" />
		<result column="article_content" jdbcType="VARCHAR" property="content" />
	</resultMap>

	<!-- 配置select语句，id="queryArticleByTitle"与IArticle的方法名一致，resultMap="ArticleResult"与上面的映射类的id一致，parameterType为方法返回值类型 -->
	<select id="queryArticleByTitle" parameterType="java.lang.String"
		resultMap="ArticleResult">
		select id, student_number, student_name, article_title,
		article_content from articles
		<where>
			<if test="_parameter != null and !&quot;&quot;.equals(_parameter.trim())">
				article_title=#{title}
			</if>
		</where>
	</select>
	
	<!-- 配置select语句，id="queryArticleByTitle"与IArticle的方法名一致，resultMap="ArticleResult"与上面的映射类的id一致，parameterType为方法返回值类型 -->
	<select id="queryArticleListByTitle" parameterType="java.lang.String"
		resultMap="ArticleResult">
		select id, student_number, student_name, article_title,
		article_content from articles
		<where>
			<if test="_parameter != null and !&quot;&quot;.equals(_parameter.trim())">
				article_title like '%' #{title} '%'
			</if>
		</where>
	</select>

	<!-- 配置select语句，id="queryAllArticleList"与IArticle的方法名一致，resultMap="ArticleResult"与上面的映射类的id一致，parameterType为方法返回值类型 -->
	<select id="queryAllArticleList" resultMap="ArticleResult">
		select id,
		student_number, student_name, article_title,
		article_content from
		articles
	</select>

	<!-- 根据学号查询article -->
	<select id="queryArticleByNumber" parameterType="String"
		resultMap="ArticleResult">
		select id, student_number, student_name, article_title,
		article_content from articles
		<where>
			<if test="_parameter != null and !&quot;&quot;.equals(_parameter.trim())">
				student_number=#{number}
			</if> 
		</where>

	</select>

	<!-- 分页查询 -->
	<select id="queryArticleByPage" parameterType="java.util.Map"
		resultMap="ArticleResult">
		select id, student_number, student_name,
		article_title,
		article_content from articles
		limit
		#{dbIndex},#{dbNumber}

	</select>

	<!-- 配置insert语句 -->
	<insert id="addArticle" parameterType="com.textile083.entity.Article">
		INSERT INTO articles
		(
		student_number,
		student_name,
		article_title,
		article_content
		)
		VALUES
		(
		#{number},
		#{name},
		#{title},
		#{content}
		)
	</insert>
	
	
	<!-- 配置delete语句 -->
	<delete id="deleteArticleById" parameterType="Integer">
	   delete from articles
	   <where>
	     id=#{id}
	   </where>
	</delete>


</mapper>
